% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Integration_flexible.R
\name{perform_integration}
\alias{perform_integration}
\title{Perform flexible integration of multiple Seurat objects.}
\usage{
perform_integration(
  seurat_list,
  metadata_column = "",
  integration_features_n = 3000,
  dims = 20,
  num_cores = 16,
  min_cells_threshold = 200,
  output_path = "final_integrated_seurat.rds",
  checkpoint_dir = "./integration_checkpoints",
  anchor_batches_dir = "./anchor_batches",
  clear_existing = FALSE,
  gene_subset_method = "intersection",
  k_anchor = 5,
  k_filter = 50,
  k_weight = 50,
  min_final_anchors = 1000
)
}
\arguments{
\item{seurat_list}{A named list of [Seurat][Seurat::Seurat-class] objects to
be integrated.}

\item{metadata_column}{Metadata column name used to group datasets. Leave
empty to treat the entire list as one group.}

\item{integration_features_n}{Number of features to use for integration.}

\item{dims}{Number of dimensions to use in downstream integration steps.}

\item{num_cores}{Number of cores to use for parallel processing.}

\item{min_cells_threshold}{Minimum number of cells required in each dataset.}

\item{output_path}{Path where the integrated `Seurat` object should be saved.}

\item{checkpoint_dir}{Directory in which to store integration checkpoints.}

\item{anchor_batches_dir}{Directory to cache anchor computations.}

\item{clear_existing}{If `TRUE`, remove existing checkpoints and caches
before running.}

\item{gene_subset_method}{Method used to obtain common genes across datasets.}

\item{k_anchor}{`k.anchor` parameter passed to
[Seurat::FindIntegrationAnchors()].}

\item{k_filter}{`k.filter` parameter passed to
[Seurat::FindIntegrationAnchors()].}

\item{k_weight}{`k.weight` parameter passed to [Seurat::IntegrateData()].}

\item{min_final_anchors}{Minimum number of anchors required to proceed with
integration.}
}
\value{
An integrated `Seurat` object combining all input datasets.
}
\description{
Integrate a list of Seurat objects into a single dataset using a flexible
pipeline with optional checkpointing, anchor caching, and parallelization.
}
\examples{
\dontrun{
data_list <- list(sample1 = seurat1, sample2 = seurat2)
integrated <- perform_integration(data_list, metadata_column = "batch")
}
}
