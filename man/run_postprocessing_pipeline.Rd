% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PH_PostProcessing_andAnalysis.R
\name{run_postprocessing_pipeline}
\alias{run_postprocessing_pipeline}
\title{Full post-processing pipeline}
\usage{
run_postprocessing_pipeline(
  ph_results,
  results_dir = "results",
  num_cores = parallel::detectCores(),
  run_standard_seurat_clustering = TRUE,
  run_kmeans_clustering = TRUE,
  run_hierarchical_ph_clustering = TRUE,
  run_spectral_clustering = TRUE,
  run_visualizations = TRUE,
  run_sample_level_heatmap = TRUE,
  run_cluster = TRUE,
  run_betti = TRUE,
  run_cross_iteration = TRUE,
  metadata_path = "./data/VastlyDifferentTissues/metadata.csv",
  SRA_col = "orig.ident",
  Tissue_col = "Tissue",
  Approach_col = "Approach",
  ...
)
}
\arguments{
\item{ph_results}{Result object from `process_datasets_PH()`.}

\item{results_dir}{Directory where output should be saved.}

\item{num_cores}{Number of cores used when calculating matrices.}

\item{run_standard_seurat_clustering}{Logical, run Seurat clustering.}

\item{run_kmeans_clustering}{Logical, run k-means clustering.}

\item{run_hierarchical_ph_clustering}{Logical, perform hierarchical
clustering on PH distances.}

\item{run_spectral_clustering}{Logical, run spectral clustering.}

\item{run_visualizations}{Logical, generate plots for each iteration.}

\item{run_sample_level_heatmap}{Logical, create sample-level heatmaps.}

\item{run_cluster}{Logical, run clustering comparisons if `TRUE`.}

\item{run_betti}{Logical, compute Betti curves if `TRUE`.}

\item{run_cross_iteration}{Logical, run cross-iteration analysis.}

\item{metadata_path}{Optional path to metadata CSV for plotting.}

\item{SRA_col}{Metadata column with sample identifiers.}

\item{Tissue_col}{Metadata column containing tissue labels.}

\item{Approach_col}{Metadata column describing experimental approach.}

\item{...}{Additional arguments passed to helper functions.}
}
\value{
Invisibly returns a list with generated results.
}
\description{
Performs matrix calculations, clustering and all downstream analyses
for the persistent homology results returned by
`process_datasets_PH()`.
}
\examples{
\dontrun{
ph_results <- process_datasets_PH(read.csv("metadata.csv"))
run_postprocessing_pipeline(ph_results, num_cores = 2)
}
}
